# Configurations for CNN-based disease normalization.
# Defaults for paths, experimental parameters, etc.

# Config syntax:
# - case-sensitive section headers
# - case-insensitive parameter names
# - no in-line comments
# - use ${param} or ${section:param} to reuse other parameter values
# - the parameter ${rootpath} is preset to the project root path
# - after interpolating ${...}, values are interpreted as JSON fragments;
#   if that fails, some more Boolean names are tried (True/False, On/Off);
#   otherwise a string is returned unchanged


[DEFAULT]

# defaults for all sections

workers = 10



[general]

# General options
# ===============

dataset = ncbi-disease
training_subset = train
prediction_subset = dev



[logging]

# Progress info and other diagnostic output
# =========================================

format = %(asctime)s - %(message)s
level = INFO

summary_fn = runs/summaries/${timestamp}.txt
prediction_fn = runs/predictions/${timestamp}.tsv



[candidates]

# Candidate generation
# ====================

# To use multiple generators, add each on a separate line (indented)
generator = SGramFixedSet(10, [(2, 1), (3, 1)])
            PhraseVecFixedSet(10, "mean")

# Oracle: add all ground-truth names to the candidate set?
# Value should be one of "train", "predict", "both", "none"
oracle = none



[emb]

# Word (or subword-unit) embeddings
# =================================

# tokens per mention
sample_size = 100

tokenizer = bpe
tokenizer_model = ${rootpath}/data/embeddings/bpe_abstract10000model

embedding_fn = ${rootpath}/data/embeddings/bpe_vectors_10000_50_w2v.txt
trainable = False
# fallbacks if not using pretrained embeddings
embedding_dim = 50
embedding_voc = 10000

vectorizer_cache = True



[rank]

# CNN-based ranking
# =================

# number of filters in the convolution
n_kernels = 50
filter_width = 3
# used in convolution and hidden layer
activation = tanh

optimizer = {"class_name": "adadelta", "config": {"lr": 1.0}}
loss = binary_crossentropy
epochs = 10
batch_size = 32

# if the top-ranking score is below min_score, cast the ID to NIL
min_score = 0.0



[stop]

# Early-stopping callback for the CNN
# ===================================

# minimum change in the monitored quantity to qualify as an improvement
min_delta = 0
# number of epochs with no improvement after which training will be stopped
patience = 2
# training will stop if the model does not show improvement over the baseline
baseline = 0



# Dataset-specific parameters
# ===========================


[ncbi-disease]

train_fn = ${rootpath}/data/ncbi-disease/NCBItrainset_corpus.txt
dev_fn = ${rootpath}/data/ncbi-disease/NCBIdevelopset_corpus.txt
test_fn = ${rootpath}/data/ncbi-disease/NCBItestset_corpus.txt
dict_fn = ${rootpath}/data/ncbi-disease/CTD_diseases.tsv
